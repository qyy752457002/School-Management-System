"""

Revision ID: 3ca2b583ce24
Revises: e689d89db492
Create Date: 2024-06-06 15:14:20.561543

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3ca2b583ce24'
down_revision: Union[str, None] = 'e689d89db492'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lfun_organization',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='ID'),
    sa.Column('org_type', sa.String(length=64), nullable=False, comment='组织分类 行政类等'),
    sa.Column('org_name', sa.String(length=64), nullable=False, comment='组织或者部门名称 例如行政部'),
    sa.Column('parent_id', sa.Integer(), nullable=True, comment='父级ID'),
    sa.Column('created_uid', sa.Integer(), nullable=True, comment='创建人'),
    sa.Column('updated_uid', sa.Integer(), nullable=True, comment='操作人'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='删除态'),
    sa.PrimaryKeyConstraint('id'),
    comment='组织架构模型'
    )
    op.create_table('lfun_organization_members',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='ID'),
    sa.Column('org_id', sa.Integer(), nullable=True, comment='部门ID'),
    sa.Column('member_name', sa.String(length=64), nullable=False, comment='姓名'),
    sa.Column('member_type', sa.String(length=64), nullable=False, comment='成员类型/岗位 例如老师 领导 职工等'),
    sa.Column('birthday', sa.String(length=64), nullable=False, comment='生日'),
    sa.Column('gender', sa.String(length=64), nullable=False, comment='性别'),
    sa.Column('mobile', sa.String(length=64), nullable=False, comment='手机'),
    sa.Column('card_type', sa.String(length=64), nullable=False, comment='证件类型'),
    sa.Column('card_number', sa.String(length=64), nullable=False, comment='证件号码'),
    sa.Column('identity', sa.String(length=64), nullable=True, comment='身份'),
    sa.Column('created_uid', sa.Integer(), nullable=True, comment='创建人'),
    sa.Column('updated_uid', sa.Integer(), nullable=True, comment='操作人'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='删除态'),
    sa.PrimaryKeyConstraint('id'),
    comment='组织部门成员表模型'
    )
    op.create_table('lfun_subject',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='ID'),
    sa.Column('subject_name', sa.String(length=64), nullable=False, comment='课程名称=年级+学科'),
    sa.Column('subject_alias', sa.String(length=64), nullable=False, comment='课程别名'),
    sa.Column('subject_level', sa.String(length=64), nullable=False, comment='课程等级 国家/地方/校本'),
    sa.Column('course_name', sa.String(length=24), nullable=True, comment='学科名称'),
    sa.Column('grade_id', sa.Integer(), nullable=True, comment='年级ID'),
    sa.Column('subject_description', sa.String(length=255), nullable=True, comment='课程简介'),
    sa.Column('subject_requirement', sa.String(length=255), nullable=True, comment='课程要求'),
    sa.Column('credit_hour', sa.Integer(), nullable=True, comment='总学时'),
    sa.Column('week_credit_hour', sa.Integer(), nullable=True, comment='周学时'),
    sa.Column('self_study_credit_hour', sa.Integer(), nullable=True, comment='自学学时'),
    sa.Column('teach_method', sa.String(length=40), nullable=True, comment='授课方式'),
    sa.Column('textbook_code', sa.String(length=40), nullable=True, comment='教材编码'),
    sa.Column('reference_book', sa.String(length=40), nullable=True, comment='参考书目'),
    sa.Column('created_uid', sa.Integer(), nullable=True, comment='创建人'),
    sa.Column('updated_uid', sa.Integer(), nullable=True, comment='操作人'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='删除态'),
    sa.PrimaryKeyConstraint('id'),
    comment='课程表模型'
    )
    op.add_column('lfun_classes', sa.Column('session_id', sa.Integer(), nullable=True, comment='届别ID'))
    op.add_column('lfun_classes', sa.Column('teacher_card_type', sa.String(length=48), nullable=True, comment='班主任证件类型'))
    op.add_column('lfun_classes', sa.Column('teacher_phone', sa.String(length=48), nullable=True, comment='班主任电话'))
    op.add_column('lfun_classes', sa.Column('teacher_job_number', sa.String(length=48), nullable=True, comment='班主任工号'))
    op.add_column('lfun_classes', sa.Column('care_teacher_id_card', sa.String(length=48), nullable=True, comment='保育员身份证'))
    op.add_column('lfun_classes', sa.Column('care_teacher_card_type', sa.String(length=48), nullable=True, comment='班主任证件类型'))
    op.add_column('lfun_classes', sa.Column('care_teacher_name', sa.String(length=48), nullable=True, comment='保育员姓名'))
    op.add_column('lfun_classes', sa.Column('care_teacher_phone', sa.String(length=48), nullable=True, comment='班主任电话'))
    op.add_column('lfun_classes', sa.Column('care_teacher_job_number', sa.String(length=48), nullable=True, comment='班主任工号'))
    op.add_column('lfun_classes', sa.Column('monitor_student_number', sa.String(length=48), nullable=True, comment='班长学号'))
    op.add_column('lfun_course', sa.Column('school_type', sa.String(length=64), nullable=True, comment='教育阶段/学校类别 例如 小学 初中 多个逗号隔开'))
    op.alter_column('lfun_course', 'id',
               existing_type=sa.INTEGER(),
               comment='ID',
               existing_comment='班级ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('lfun_course', 'district',
               existing_type=sa.VARCHAR(length=64),
               comment='',
               existing_nullable=True)
    op.alter_column('lfun_course', 'course_no',
               existing_type=sa.VARCHAR(length=24),
               comment='学科编码',
               existing_comment='课程编码',
               existing_nullable=True)
    op.alter_column('lfun_course', 'course_name',
               existing_type=sa.VARCHAR(length=24),
               comment='学科名称',
               existing_comment='课程名称',
               existing_nullable=False)
    op.create_table_comment(
        'lfun_course',
        '学科表模型',
        existing_comment='课程表模型',
        schema=None
    )
    op.alter_column('lfun_education_year', 'district',
               existing_type=sa.VARCHAR(length=64),
               comment='',
               existing_nullable=True)
    op.add_column('lfun_grade', sa.Column('sort_number', sa.Integer(), nullable=True, comment='排序'))
    op.add_column('lfun_grade', sa.Column('school_type', sa.String(length=64), nullable=True, comment='教育阶段/学校类别 例如 小学 初中'))
    op.add_column('lfun_grade', sa.Column('course_no', sa.String(length=24), nullable=True, comment='学科编码/中职用枚举'))
    op.add_column('lfun_grade', sa.Column('course_no_lv2', sa.String(length=24), nullable=True, comment='学科编码2'))
    op.add_column('lfun_grade', sa.Column('course_no_lv3', sa.String(length=24), nullable=True, comment='学科编码3'))
    op.add_column('lfun_grade', sa.Column('grade_type', sa.String(length=64), nullable=True, comment='年级类型/班级类型 例如 一年级 二年级 三年级'))
    op.alter_column('lfun_grade', 'grade_name',
               existing_type=sa.VARCHAR(length=64),
               comment='年级名称/班级名称',
               existing_comment='年级名称',
               existing_nullable=False)
    op.add_column('lfun_leader_info', sa.Column('identity', sa.String(length=64), nullable=True, comment='身份'))
    op.add_column('lfun_student_session', sa.Column('year', sa.String(length=64), nullable=True, comment='年度'))
    op.add_column('lfun_students_base_info', sa.Column('identity', sa.String(length=64), nullable=True, comment='身份'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('lfun_students_base_info', 'identity')
    op.drop_column('lfun_student_session', 'year')
    op.drop_column('lfun_leader_info', 'identity')
    op.alter_column('lfun_grade', 'grade_name',
               existing_type=sa.VARCHAR(length=64),
               comment='年级名称',
               existing_comment='年级名称/班级名称',
               existing_nullable=False)
    op.drop_column('lfun_grade', 'grade_type')
    op.drop_column('lfun_grade', 'course_no_lv3')
    op.drop_column('lfun_grade', 'course_no_lv2')
    op.drop_column('lfun_grade', 'course_no')
    op.drop_column('lfun_grade', 'school_type')
    op.drop_column('lfun_grade', 'sort_number')
    op.alter_column('lfun_education_year', 'district',
               existing_type=sa.VARCHAR(length=64),
               comment=None,
               existing_comment='',
               existing_nullable=True)
    op.create_table_comment(
        'lfun_course',
        '课程表模型',
        existing_comment='学科表模型',
        schema=None
    )
    op.alter_column('lfun_course', 'course_name',
               existing_type=sa.VARCHAR(length=24),
               comment='课程名称',
               existing_comment='学科名称',
               existing_nullable=False)
    op.alter_column('lfun_course', 'course_no',
               existing_type=sa.VARCHAR(length=24),
               comment='课程编码',
               existing_comment='学科编码',
               existing_nullable=True)
    op.alter_column('lfun_course', 'district',
               existing_type=sa.VARCHAR(length=64),
               comment=None,
               existing_comment='',
               existing_nullable=True)
    op.alter_column('lfun_course', 'id',
               existing_type=sa.INTEGER(),
               comment='班级ID',
               existing_comment='ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('lfun_course', 'school_type')
    op.drop_column('lfun_classes', 'monitor_student_number')
    op.drop_column('lfun_classes', 'care_teacher_job_number')
    op.drop_column('lfun_classes', 'care_teacher_phone')
    op.drop_column('lfun_classes', 'care_teacher_name')
    op.drop_column('lfun_classes', 'care_teacher_card_type')
    op.drop_column('lfun_classes', 'care_teacher_id_card')
    op.drop_column('lfun_classes', 'teacher_job_number')
    op.drop_column('lfun_classes', 'teacher_phone')
    op.drop_column('lfun_classes', 'teacher_card_type')
    op.drop_column('lfun_classes', 'session_id')
    op.drop_table('lfun_subject')
    op.drop_table('lfun_organization_members')
    op.drop_table('lfun_organization')
    # ### end Alembic commands ###
